  - platform: nordpool
    region: SE3
    currency: SEK
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
  - platform: template
    sensors:
  #BV energy sensor
      bv_approx_power:
        friendly_name: Heat pump power
        unit_of_measurement: 'W'
        value_template: >-
          {{ (0 if states('binary_sensor.bv_compressor') == 'off' else 1) * (states.input_number.bv_compressor_approx_power.state | float) }}
  #VPN sensor
      vpn_simple:
        friendly_name: VPN simple
        value_template: >-
          {% for row in states.sensor.vpn_clients.state.split('\n') -%}
            {% for value in row.split('--') -%}
              {% if loop.index <= 2 -%}
                {{ value }}
              {%- endif %}
              {% if loop.index <= 1 -%}
                {{ ' ' }}
              {%- endif %}
            {%- endfor %}
            {{'\n'}}
          {%- endfor %}
  #Others
      solar_angle:
        value_template: '{{ "%+.1f"|format(states.sun.sun.attributes.elevation) }}'
        friendly_name: 'Sun Angle'
        unit_of_measurement: '°'
      sunrise:
        friendly_name: 'Sunrise'
        value_template: >-
          {{ as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom(' %H:%M') | replace(" 0", "") }}
        icon_template: mdi:weather-sunset-up
      sunset:
        friendly_name: 'Sunset'
        value_template: >-
          {{ as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom(' %H:%M') | replace(" 0", "") }}
        icon_template: mdi:weather-sunset-down
      roger_status:
        friendly_name: 'Roger status'
        value_template: "{{ state_attr('vacuum.roger', 'status') }}"
      roger_battery:
        friendly_name: 'Roger battery level'
        value_template: "{{ state_attr('vacuum.roger', 'battery_level') }}"
        unit_of_measurement: '%'
        device_class: battery
      # pelle_velocity:
      #   friendly_name: 'Pelle velocity'
      #   value_template: '{{ (states.device_tracker.per_per.attributes.velocity * 3.542) | int }}'
      #   unit_of_measurement: 'kmh'
      # marie_velocity:
      #   friendly_name: 'Marie velocity'
      #   value_template: "{{ state_attr('device_tracker.marie_marie', 'velocity') | int }}"
      #   unit_of_measurement: 'kmh'
      # frida_velocity:
      #   friendly_name: 'Frida velocity'
      #   value_template: '{{ (states.device_tracker.frida_frida.attributes.velocity * 3.542) | int}}'
      #   unit_of_measurement: 'kmh'
      # jenny_velocity:
      #   friendly_name: 'Jenny velocity'
      #   value_template: '{{ (states.device_tracker.jenny_jenny.attributes.velocity * 3.542) | int}}'
      #   unit_of_measurement: 'kmh'
      # albin_velocity:
      #   friendly_name: 'Albin velocity'
      #   value_template: '{{ (states.device_tracker.albin_albin.attributes.velocity * 3.542) | int}}'
      #   unit_of_measurement: 'kmh'
  - platform: integration
    source: sensor.bv_approx_power
    name: heat_pump_energy
    method: left
    unit_prefix: k
    round: 2
  - platform: mqtt
    state_topic: "hass/mqttclients/hass"
    name: "Hass mqtt status"
  - platform: mqtt
    state_topic: "hass/intromessage"
    name: "From Hass"
  - platform: mqtt
    state_topic: "hass/bv/time"
    name: "BV-time"
  - platform: mqtt
    state_topic: "hass/bv/freemem"
    name: "BV-free mem"
    unit_of_measurement: '%'
  - platform: mqtt
    state_topic: "hass/bv/0001"
    name: "BV-Radiator Return"
    unit_of_measurement: '°C'
  - platform: mqtt
    state_topic: "hass/bv/0003"
    name: "BV-Heat carrier Return"
    unit_of_measurement: '°C'
  - platform: mqtt
    state_topic: "hass/bv/0004"
    name: "BV-Heat carrier Forwrd"
    unit_of_measurement: '°C'
  - platform: mqtt
    state_topic: "hass/bv/0005"
    name: "BV-Brine in/Evaporator"
    unit_of_measurement: '°C'
  - platform: mqtt
    state_topic: "hass/bv/0006"
    name: "BV-Brine out/Condenser"
    unit_of_measurement: '°C'
  - platform: mqtt
    state_topic: "hass/bv/0007"
    name: "BV-Outdoor"
    unit_of_measurement: '°C'
  - platform: mqtt
    state_topic: "hass/bv/0009"
    name: "BV-Hot water 1 / Top"
    unit_of_measurement: '°C'
  - platform: mqtt
    state_topic: "hass/bv/000B"
    name: "BV-Hot gas / Compr."
    unit_of_measurement: '°C'
  - platform: mqtt
    state_topic: "hass/bv/0107"
    name: "BV-Heating setpoint"
    unit_of_measurement: '°C'
  - platform: mqtt
    state_topic: "hass/bv/2205"
    name: "BV-Heat set 1, CurveL"
    unit_of_measurement: 'BV'
  - platform: mqtt
    state_topic: "hass/bv/2207"
    name: "BV-Heat set 3, Parallel"
    unit_of_measurement: 'BV'
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: disk_free
        arg: /
      - type: memory_use_percent
      - type: memory_free
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: processor_use
      - type: throughput_network_in
        arg: hassio
      - type: throughput_network_out
        arg: hassio
      - type: last_boot
  - platform: command_line
    name: CPU Temperature
    command: "ssh -F /config/ssh/config root@192.168.86.254 'cat /sys/class/thermal/thermal_zone2/temp'"
    # If errors occur, remove degree symbol below
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) }}'
  - platform: command_line
    name: NUC7 Temperature
    command: "ssh -F /config/ssh/config pelle@192.168.86.76 'cat /sys/class/thermal/thermal_zone2/temp'"
    # If errors occur, remove degree symbol below
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) }}'
  - platform: command_line
    name: OMV Temperature
    command: "ssh -F /config/ssh/config pi@192.168.86.249 'cat /sys/class/thermal/thermal_zone0/temp'"
    # If errors occur, remove degree symbol below
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) }}'
  - platform: command_line
    name: Seagate4TB Temperature
    command: "ssh -F /config/ssh/config pi@192.168.86.249 sudo smartctl -a /dev/sdb| grep Temperature_Celsius | awk '{print $4}'"
    # If errors occur, remove degree symbol below
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(1) }}'
  - platform: command_line
    name: WG Pi Temperature
    command: "ssh -F /config/ssh/config pi@192.168.86.45 'cat /sys/class/thermal/thermal_zone0/temp'"
    # If errors occur, remove degree symbol below
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) }}'
  - platform: command_line
    name: VPN Clients
    command: "ssh -F /config/ssh/config pi@192.168.86.45 'pivpn -c' | grep 10.6 | sed -r 's/^(\\S*)\\s*(\\S*)\\s*\\S*\\s*\\S*\\s*(\\S*)\\s*(.*$)/\\1--\\2--\\3--\\4--***/g'"
    value_template: '{{ value[:255] }}'
  - platform: uptime
  - platform: aarlo
    monitored_conditions:
    - total_cameras
    - last_capture
    - recent_activity
    - captured_today
    - battery_level
    - signal_strength
    - temperature
    - humidity
    - air_quality
  - platform: google_wifi
    host: 192.168.86.1

# HASL Hass SL integration
#  - platform: hasl
#    ri4key: !secret sl_ri4_key
#    si2key: !secret sl_si2_key
#    tl2key: !secret sl_tl2_key
#    sensors:
#    - friendly_name: Klisätravägen
#      sensor_type: departures
#      siteid: 4612
#      lines: ['401']
#      direction: 2
#    # - friendly_name: Trafikstatus
#    #   sensor_type: status